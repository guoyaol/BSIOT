'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _component = require('./component');

var _component2 = _interopRequireDefault(_component);

var _mapvgl = require('mapvgl');

var mapvgl = _interopRequireWildcard(_mapvgl);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mapvgl可视化图层
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author hedongran
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @email hdr01@126.com
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var MapvglLayer = function (_Component) {
    _inherits(MapvglLayer, _Component);

    function MapvglLayer(props) {
        _classCallCheck(this, MapvglLayer);

        var _this = _possibleConstructorReturn(this, (MapvglLayer.__proto__ || Object.getPrototypeOf(MapvglLayer)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(MapvglLayer, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.initialize();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (this.layer && this.props.view && this.layer.options) {
                this.props.view.removeLayer(this.layer);
                this.layer.destroy();
                this.layer = null;
            }
        }
    }, {
        key: 'handleClick',
        value: function handleClick(id) {
            this.props.onClick && this.props.onClick(id);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            var preData = JSON.stringify(prevProps.data);
            var data = JSON.stringify(this.props.data);
            var preOptions = JSON.stringify(prevProps.options);
            var options = JSON.stringify(this.props.options);
            if (!this.map || preData !== data || preOptions !== options) {
                this.initialize();
            }
        }
    }, {
        key: 'initialize',
        value: function initialize() {
            var _this2 = this;

            var map = this.props.map;
            if (!map) {
                return;
            }
            this.map = map;

            if (!this._createLayer) {
                this.createLayers();
            }

            if (this.props.options.autoViewport) {
                var projection = map.getMapType().getProjection();
                var getPoint = function getPoint(coordinate) {
                    if (_this2.props.options.coordType === 'bd09mc') {
                        return projection.pointToLngLat(new BMap.Pixel(coordinate[0], coordinate[1]));
                    } else {
                        return new BMap.Point(coordinate[0], coordinate[1]);
                    }
                };

                var points = [];

                this.props.data.map(function (item) {
                    if (item.geometry.type === 'Point') {
                        points.push(getPoint(item.geometry.coordinates));
                    } else if (item.geometry.type === 'LineString') {
                        item.geometry.coordinates.map(function (item) {
                            points.push(getPoint(item));
                        });
                    } else if (item.geometry.type === 'Polygon') {
                        item.geometry.coordinates[0].map(function (item) {
                            points.push(getPoint(item));
                        });
                    }
                });

                if (points.length > 0) {
                    map.setViewport(points, this.props.options.viewportOptions);
                }
            }

            this.layer.setData(this.props.data);
            this.layer.setOptions(this.props.options);
        }
    }, {
        key: 'createLayers',
        value: function createLayers() {
            if (mapvgl[this.props.type]) {
                this._createLayer = true;
                this.layer = new mapvgl[this.props.type](this.props.options);
                this.props.view.addLayer(this.layer);
            } else {
                console.error('mapvgl doesn\'t have layer ' + this.props.type + '!');
            }
        }
    }], [{
        key: 'defaultProps',
        get: function get() {
            return {};
        }
    }]);

    return MapvglLayer;
}(_component2.default);

exports.default = MapvglLayer;